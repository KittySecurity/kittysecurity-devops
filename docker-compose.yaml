version: '3.9'

services:
  nginx:
    image: nginx:1-alpine
    ports:
      - "80:80"
    volumes:
      - ./conf/nginx.conf:/etc/nginx/conf.d/default.conf
    networks:
      - app-network
    depends_on:
      - backend
      - frontend

  postgres:
    image: postgres:17-alpine
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_PASSWORD=$DB_PASSWORD
      - POSTGRES_USER=$DB_USERNAME
      - POSTGRES_DB=$DB_NAME
      - PGUSER=$DB_USERNAME
    networks:
      - app-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready"]
      timeout: 10s
      retries: 3

  backend:
    image: ghcr.io/kittysecurity/kittysecuritybackend:latest
    ports:
      - 8080:$APP_PORT
    environment:
      - JWT_PROP_SECRETKEY=$JWT_PROP_SECRETKEY
      - DB_NAME=$DB_NAME
      - DB_USERNAME=$DB_USERNAME
      - DB_PASSWORD=$DB_PASSWORD
    networks:
      - app-network
    restart: on-failure

  frontend:
    image: ghcr.io/kittysecurity/kittysecurityfrontend:latest
    image: ghcr.io/kittysecurity/kittysecurityfrontend:latest
    ports:
      - "3000:3000"
    networks:
      - app-network
    depends_on:
      - backend

networks:
  app-network:
    driver: bridge
